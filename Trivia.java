/**
 *
 * CSCI 401 Ian Jeff Rebecca Fall 2016
 */

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.lang.Math;
import javax.swing.Timer;

public class Trivia extends javax.swing.JFrame {

    private Game q1;
    private Game q2;
    private Game q3;
    private Game q4;
    private Game q5;
    private Game q6;
    private Game q7;
    private Game q8;
    private Game q9;
    private Game q10;
    private Game q11;
    private Game q12;
    private Game q13;
    private Game q14;
    private int counter = 0;
    private int randCount = 0;
    private int numQuestions = 10;
    private int score;
    private Game[] trivia;
    private int randomQuestion;
    private int timerCount = 0;
    private Timer t;
    
    
    public Trivia() {
        initComponents();
        popUp.setVisible(false);
        populateQuestions();
        runGame();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        timer = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        popUp = new javax.swing.JPanel();
        popUpLabel = new javax.swing.JLabel();
        popUpButton = new javax.swing.JButton();
        popUpAnswer = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(850, 554));
        setMinimumSize(new java.awt.Dimension(850, 554));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(java.awt.Color.white);
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/chalkboard.trivia.overlay.jpg"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(221, 11, -1, 159));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 419, 247, 89));

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(137, 318, 247, 89));

        jButton3.setText("jButton3");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 320, 247, 91));

        jButton4.setText("jButton4");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(471, 419, 247, 89));

        jButton5.setText("Quit");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(703, 28, 100, 46));

        jLabel1.setBackground(new java.awt.Color(102, 102, 102));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Question");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 188, 785, 85));

        timer.setFont(new java.awt.Font("Tahoma", 0, 96)); // NOI18N
        timer.setForeground(new java.awt.Color(255, 0, 0));
        timer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        timer.setText("15");
        jPanel1.add(timer, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 29, 177, 141));

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Timer:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(18, 0, 177, 23));

        popUp.setBackground(new java.awt.Color(102, 102, 102));
        popUp.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "TRIVIA!", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, null, new java.awt.Color(240, 240, 240)));

        popUpLabel.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        popUpLabel.setForeground(new java.awt.Color(240, 240, 240));
        popUpLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        popUpLabel.setText("Sorry Time Ran Out!");

        popUpButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        popUpButton.setText("Back To Game");
        popUpButton.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 0, 0)));
        popUpButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                popUpButtonActionPerformed(evt);
            }
        });

        popUpAnswer.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        popUpAnswer.setForeground(new java.awt.Color(240, 240, 240));
        popUpAnswer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout popUpLayout = new javax.swing.GroupLayout(popUp);
        popUp.setLayout(popUpLayout);
        popUpLayout.setHorizontalGroup(
            popUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(popUpLayout.createSequentialGroup()
                .addGroup(popUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(popUpLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(popUpLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(popUpLayout.createSequentialGroup()
                        .addGap(70, 70, 70)
                        .addComponent(popUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 62, Short.MAX_VALUE))
                    .addGroup(popUpLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(popUpAnswer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        popUpLayout.setVerticalGroup(
            popUpLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(popUpLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(popUpLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(popUpAnswer, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(popUpButton, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
        );

        jPanel1.add(popUp, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 170, 370, 230));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 850, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        this.setVisible(false);
        new Home().setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton5ActionPerformed

    /**
     * When one of the four answers are chosen, the pop up window appears and 
     * tells you if you got the answer correct and updates the score, but if
     * not displays what the correct answer is.
     * 
     */
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        showPopUp();
        if (trivia[randomQuestion].getOption2().equals(trivia[randomQuestion].getAnswer())){
            score++;
            popUpLabel.setText("Correct!");
        }else{
            popUpLabel.setText("Incorrect, the correct answer is : ");
            popUpAnswer.setText(trivia[randomQuestion].getAnswer());
        }
        
            
        counter++;
        t.stop();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        showPopUp();
        if (trivia[randomQuestion].getOption1().equals(trivia[randomQuestion].getAnswer())){
            score++;
            popUpLabel.setText("Correct!");
        }else{
            popUpLabel.setText("Incorrect, the correct answer is : ");
            popUpAnswer.setText(trivia[randomQuestion].getAnswer());
        }
        counter++;
        t.stop();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        showPopUp();
        if (trivia[randomQuestion].getOption3().equals(trivia[randomQuestion].getAnswer())){
            score++;
            popUpLabel.setText("Correct!");
        }else{
            popUpLabel.setText("Incorrect, the correct answer is : ");
            popUpAnswer.setText(trivia[randomQuestion].getAnswer());
        }
        counter++;
        t.stop();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        showPopUp();
        if (trivia[randomQuestion].getOption4().equals(trivia[randomQuestion].getAnswer())){
            score++;
            popUpLabel.setText("Correct!");
        }else{
            popUpLabel.setText("Incorrect, the correct answer is : ");
            popUpAnswer.setText(trivia[randomQuestion].getAnswer());
        }
        counter++;
        t.stop();

    }//GEN-LAST:event_jButton4ActionPerformed

    /**
     * Disables the pop up window and goes back to the game.
     * 
     */
    private void popUpButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_popUpButtonActionPerformed
        popUp.setVisible(false);
        nextQuestion();
    }//GEN-LAST:event_popUpButtonActionPerformed

    /**
     * Displays a pop up notification and disables all buttons
     * 
     */
    public void showPopUp(){
    
        jLabel1.setVisible(false);
        jButton1.setVisible(false);
        jButton2.setVisible(false);
        jButton3.setVisible(false);
        jButton4.setVisible(false);
        popUpLabel.setText("");
        popUpAnswer.setText("");
        popUp.setVisible(true);
    
    }
    
    /**
     *  Generates a random number from 0 to 13 (based on the number of questions,
     * if the index of the trivia array corresponding to that number has been
     * used already, it will call itself to try again but if the number hasn't 
     * been used the question will be displayed, the timer started and the
     * question set equal to used
     * 
     */
    public void runGame(){
        
        randomQuestion = (int)(Math.random()*(13)+ 0);
        if(trivia[randomQuestion].getUsed())
            runGame();
        else{
            jLabel1.setVisible(true);
            jButton1.setVisible(true);
            jButton2.setVisible(true);
            jButton3.setVisible(true);
            jButton4.setVisible(true);
            startTimer();
            jLabel1.setText(trivia[randomQuestion].getQuestion());
            jButton1.setText(trivia[randomQuestion].getOption1());
            jButton2.setText(trivia[randomQuestion].getOption2());
            jButton3.setText(trivia[randomQuestion].getOption3());
            jButton4.setText(trivia[randomQuestion].getOption4());
            trivia[randomQuestion].setUsed(true);
        }

        
    }
    
    /**
     * Starts a timer that counts down from 15 to 0, decreasing by 1 per second.
     * If 0 is reached, then a pop up appears telling the player time ran out.
     * 
     */
    public void startTimer() {
        timerCount = 0;
        timer.setText("15");
        t = new Timer(1000, new ActionListener(){
                            
            @Override
            public void actionPerformed(ActionEvent ae){
                timer.setText(Integer.toString(14 - timerCount));
                timerCount++;
                if(timerCount == 15){
                    timerCount = 0;
                    t.stop();
                    showPopUp();
                    popUpLabel.setText("Sorry, time ran out!");
                }
                
            }
        });
        t.start();
        
    
    }
    
    /**
     * If less questions have been answered than the number of questions 
     * asked per game, then the game will run again, if not then the game will
     * end and output the player's score.
     * 
     */
    public void nextQuestion(){
    
        if (counter < numQuestions){
            
            runGame();
        
        }else{
            jLabel1.setVisible(true);
            jLabel1.setText("Game over, you score was " + score + " out of " + numQuestions);
            timer.setVisible(false);
            jButton1.setVisible(false);
            jButton2.setVisible(false);
            jButton3.setVisible(false);
            jButton4.setVisible(false);
            
        }
    
    }
    
    
    /**
     * Loads the possible questions into the game array.
     * 
     */
    public void populateQuestions(){
   
        trivia = new Game[20];
        score = 0;
        
        q1 = new Game("The Statue of Liberty was given to the US by which country?",
                "England","France","Germany","Italy","France", false);
        q2 = new Game("What is the world’s longest river?","Nile","Amazon",
                "Mississippi","Yangtze","Amazon", false);
        q3 = new Game("What is the only planet in our solar system that rotates clockwise?","Neptune","Earth",
                "Mars","Venus","Venus", false);
        q4 = new Game("What is an infant whale commonly called? ","Whalette","Cow",
                "Calf","Cub","Calf", false);
        q5 = new Game("Georgia is famous for which fruit?","Orange","Peach",
                "Strawberry","Banana","Peach", false);
        q6 = new Game("What is Canada’s national animal?","Beaver","Moose",
                "Eagle","Hark","Beaver", false);
        q7 = new Game("What is the world’s biggest island?","Madagascar","New Guinea",
                "Great Britain","Greenland","Greenland", false);
        q8 = new Game("What is the only mammal that can’t jump?","Giraffe","Dog",
                "Elephant","Hippo","Elephant", false);
        q9 = new Game("How many colors are in the rainbow?","7","5",
                "8","6","7", false);
        q10 = new Game("How many dots are there on two dice?","38","42",
                "48","52","42", false);
        q11 = new Game("Which zodiac sign is a crab?","Scorpio","Gemini",
                "Libra","Cancer","Cancer", false);
        q12 = new Game("“K” is the chemical symbol for which element?","Lead","Krypton",
                "Potassium","Cadmium","Potassium", false);
        q13 = new Game("Which Greek Goddess was the Goddess of Victory?","Nike","Apollo",
                "Aphrodite","Athena","Nike", false);
        q14 = new Game("What is the chemical symbol for Iron?","I","Fe",
                "Ir","In","Fe", false);
        
        trivia[0] = q1;
        trivia[1] = q2;
        trivia[2] = q3;
        trivia[3] = q4;
        trivia[4] = q5;
        trivia[5] = q6;
        trivia[6] = q7;
        trivia[7] = q8;
        trivia[8] = q9;
        trivia[9] = q10;
        trivia[10] = q11;
        trivia[11] = q12;
        trivia[12] = q13;
        trivia[13] = q14;
    
    
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Trivia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Trivia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Trivia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Trivia.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Trivia().setVisible(true);
            }

        });
        
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel popUp;
    private javax.swing.JLabel popUpAnswer;
    private javax.swing.JButton popUpButton;
    private javax.swing.JLabel popUpLabel;
    private javax.swing.JLabel timer;
    // End of variables declaration//GEN-END:variables
}
